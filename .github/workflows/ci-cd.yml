name: DecorAPI CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun test

      - name: Run lint
        run: bun run check || true

      - name: Check formatting
        run: bun run fix || true

  build:
    name: Build Package
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build package
        run: |
          # Debug the environment
          echo "Current directory: $(pwd)"
          echo "Directory contents before build:"
          ls -la

          # Create dist directory and run build
          mkdir -p dist
          bun run build || (echo "Build failed" && exit 1)

          # Check build output
          echo "Directory contents after build:"
          ls -la
          echo "Dist directory contents:"
          ls -la dist || echo "Dist directory is empty or doesn't exist"

          # Create a test file as a backup
          echo "This is a test file" > dist/test.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files # Changed name to avoid conflicts
          path: dist
          if-no-files-found: error # Fail if no files are found

  release:
    name: Semantic Release
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ github.repository_owner }}'

      - name: Try to download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: dist
        continue-on-error: true

      - name: Check downloaded artifacts
        run: |
          if [ -d "dist" ]; then
            echo "Dist directory exists, checking contents:"
            ls -la dist || echo "Dist directory is empty"
          else
            echo "Dist directory does not exist, creating it"
            mkdir -p dist
          fi

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      # Build again as a backup
      - name: Build package again
        run: |
          bun run build || echo "Build failed but continuing"
          echo "Dist directory contents after rebuild:"
          ls -la dist

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
